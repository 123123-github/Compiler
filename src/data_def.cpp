const int reserve_num = 50;

bool follow[reserve_num][reserve_num] =
{

	{}, // error

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // program

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // const
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // assign
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // var
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // procedure

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // begin
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // end

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // if
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // then
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // else

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // while
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // do

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // call
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // read
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // write

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // odd

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // lop
{}, // -1
{}, //
{}, // 
{}, // 
{}, // 
{}, // -6 

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // aop
{}, // -1
{}, // -2

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // mop
{}, // -1
{}, // -2

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // id
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // num

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // comma
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // semicolon

{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // lpar
{ 0,  0,  0,0,0,0,  0,0,  0,0,0,  0,0,  0,0,0,
0,  0,0,0,0,0,0,0,  0,0,0,  0,0,0,  0,0,  0,0,  0,0 }, // rpar

};

